// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: exchange_rate_alert.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateExchangeRateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteCurrency            string  `protobuf:"bytes,1,opt,name=quote_currency,json=quoteCurrency,proto3" json:"quote_currency,omitempty"`
	BaseCurrency             string  `protobuf:"bytes,2,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	UserId                   string  `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ThresholdAmount          float64 `protobuf:"fixed64,4,opt,name=threshold_amount,json=thresholdAmount,proto3" json:"threshold_amount,omitempty"`
	ThresholdUpdates         bool    `protobuf:"varint,5,opt,name=threshold_updates,json=thresholdUpdates,proto3" json:"threshold_updates,omitempty"`
	DailyUpdates             bool    `protobuf:"varint,6,opt,name=daily_updates,json=dailyUpdates,proto3" json:"daily_updates,omitempty"`
	EnableEmailNotifications bool    `protobuf:"varint,7,opt,name=enable_email_notifications,json=enableEmailNotifications,proto3" json:"enable_email_notifications,omitempty"`
	EnablePushNotifications  bool    `protobuf:"varint,8,opt,name=enable_push_notifications,json=enablePushNotifications,proto3" json:"enable_push_notifications,omitempty"`
}

func (x *CreateExchangeRateAlertRequest) Reset() {
	*x = CreateExchangeRateAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exchange_rate_alert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExchangeRateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExchangeRateAlertRequest) ProtoMessage() {}

func (x *CreateExchangeRateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_rate_alert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExchangeRateAlertRequest.ProtoReflect.Descriptor instead.
func (*CreateExchangeRateAlertRequest) Descriptor() ([]byte, []int) {
	return file_exchange_rate_alert_proto_rawDescGZIP(), []int{0}
}

func (x *CreateExchangeRateAlertRequest) GetQuoteCurrency() string {
	if x != nil {
		return x.QuoteCurrency
	}
	return ""
}

func (x *CreateExchangeRateAlertRequest) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *CreateExchangeRateAlertRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateExchangeRateAlertRequest) GetThresholdAmount() float64 {
	if x != nil {
		return x.ThresholdAmount
	}
	return 0
}

func (x *CreateExchangeRateAlertRequest) GetThresholdUpdates() bool {
	if x != nil {
		return x.ThresholdUpdates
	}
	return false
}

func (x *CreateExchangeRateAlertRequest) GetDailyUpdates() bool {
	if x != nil {
		return x.DailyUpdates
	}
	return false
}

func (x *CreateExchangeRateAlertRequest) GetEnableEmailNotifications() bool {
	if x != nil {
		return x.EnableEmailNotifications
	}
	return false
}

func (x *CreateExchangeRateAlertRequest) GetEnablePushNotifications() bool {
	if x != nil {
		return x.EnablePushNotifications
	}
	return false
}

type ExchangeRateAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	QuoteCurrency            string  `protobuf:"bytes,2,opt,name=quote_currency,json=quoteCurrency,proto3" json:"quote_currency,omitempty"`
	BaseCurrency             string  `protobuf:"bytes,3,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	UserId                   string  `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ThresholdAmount          float64 `protobuf:"fixed64,5,opt,name=threshold_amount,json=thresholdAmount,proto3" json:"threshold_amount,omitempty"`
	ThresholdUpdates         bool    `protobuf:"varint,6,opt,name=threshold_updates,json=thresholdUpdates,proto3" json:"threshold_updates,omitempty"`
	DailyUpdates             bool    `protobuf:"varint,7,opt,name=daily_updates,json=dailyUpdates,proto3" json:"daily_updates,omitempty"`
	EnableEmailNotifications bool    `protobuf:"varint,8,opt,name=enable_email_notifications,json=enableEmailNotifications,proto3" json:"enable_email_notifications,omitempty"`
	EnablePushNotifications  bool    `protobuf:"varint,9,opt,name=enable_push_notifications,json=enablePushNotifications,proto3" json:"enable_push_notifications,omitempty"`
}

func (x *ExchangeRateAlert) Reset() {
	*x = ExchangeRateAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exchange_rate_alert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRateAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateAlert) ProtoMessage() {}

func (x *ExchangeRateAlert) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_rate_alert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateAlert.ProtoReflect.Descriptor instead.
func (*ExchangeRateAlert) Descriptor() ([]byte, []int) {
	return file_exchange_rate_alert_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeRateAlert) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExchangeRateAlert) GetQuoteCurrency() string {
	if x != nil {
		return x.QuoteCurrency
	}
	return ""
}

func (x *ExchangeRateAlert) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *ExchangeRateAlert) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExchangeRateAlert) GetThresholdAmount() float64 {
	if x != nil {
		return x.ThresholdAmount
	}
	return 0
}

func (x *ExchangeRateAlert) GetThresholdUpdates() bool {
	if x != nil {
		return x.ThresholdUpdates
	}
	return false
}

func (x *ExchangeRateAlert) GetDailyUpdates() bool {
	if x != nil {
		return x.DailyUpdates
	}
	return false
}

func (x *ExchangeRateAlert) GetEnableEmailNotifications() bool {
	if x != nil {
		return x.EnableEmailNotifications
	}
	return false
}

func (x *ExchangeRateAlert) GetEnablePushNotifications() bool {
	if x != nil {
		return x.EnablePushNotifications
	}
	return false
}

type GetExchangeRateAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetExchangeRateAlertsRequest) Reset() {
	*x = GetExchangeRateAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exchange_rate_alert_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangeRateAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRateAlertsRequest) ProtoMessage() {}

func (x *GetExchangeRateAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_rate_alert_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRateAlertsRequest.ProtoReflect.Descriptor instead.
func (*GetExchangeRateAlertsRequest) Descriptor() ([]byte, []int) {
	return file_exchange_rate_alert_proto_rawDescGZIP(), []int{2}
}

func (x *GetExchangeRateAlertsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetExchangeRateAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeRateAlerts []*ExchangeRateAlert `protobuf:"bytes,1,rep,name=exchange_rate_alerts,json=exchangeRateAlerts,proto3" json:"exchange_rate_alerts,omitempty"`
}

func (x *GetExchangeRateAlertsResponse) Reset() {
	*x = GetExchangeRateAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exchange_rate_alert_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangeRateAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRateAlertsResponse) ProtoMessage() {}

func (x *GetExchangeRateAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_rate_alert_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRateAlertsResponse.ProtoReflect.Descriptor instead.
func (*GetExchangeRateAlertsResponse) Descriptor() ([]byte, []int) {
	return file_exchange_rate_alert_proto_rawDescGZIP(), []int{3}
}

func (x *GetExchangeRateAlertsResponse) GetExchangeRateAlerts() []*ExchangeRateAlert {
	if x != nil {
		return x.ExchangeRateAlerts
	}
	return nil
}

type DeleteExchangeRateAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteExchangeRateAlertsRequest) Reset() {
	*x = DeleteExchangeRateAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exchange_rate_alert_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExchangeRateAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExchangeRateAlertsRequest) ProtoMessage() {}

func (x *DeleteExchangeRateAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_rate_alert_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExchangeRateAlertsRequest.ProtoReflect.Descriptor instead.
func (*DeleteExchangeRateAlertsRequest) Descriptor() ([]byte, []int) {
	return file_exchange_rate_alert_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteExchangeRateAlertsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteExchangeRateAlertsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteExchangeRateAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteExchangeRateAlertsResponse) Reset() {
	*x = DeleteExchangeRateAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exchange_rate_alert_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExchangeRateAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExchangeRateAlertsResponse) ProtoMessage() {}

func (x *DeleteExchangeRateAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_rate_alert_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExchangeRateAlertsResponse.ProtoReflect.Descriptor instead.
func (*DeleteExchangeRateAlertsResponse) Descriptor() ([]byte, []int) {
	return file_exchange_rate_alert_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteExchangeRateAlertsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_exchange_rate_alert_proto protoreflect.FileDescriptor

var file_exchange_rate_alert_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x69, 0x6e,
	0x74, 0x22, 0xfc, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xff, 0x02, 0x0a, 0x11, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x37, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x14,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x69, 0x6e,
	0x74, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x12, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x4a, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x32, 0xa3, 0x03, 0x0a, 0x18, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x34, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x69, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x12, 0x32, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69,
	0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x35, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exchange_rate_alert_proto_rawDescOnce sync.Once
	file_exchange_rate_alert_proto_rawDescData = file_exchange_rate_alert_proto_rawDesc
)

func file_exchange_rate_alert_proto_rawDescGZIP() []byte {
	file_exchange_rate_alert_proto_rawDescOnce.Do(func() {
		file_exchange_rate_alert_proto_rawDescData = protoimpl.X.CompressGZIP(file_exchange_rate_alert_proto_rawDescData)
	})
	return file_exchange_rate_alert_proto_rawDescData
}

var file_exchange_rate_alert_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_exchange_rate_alert_proto_goTypes = []any{
	(*CreateExchangeRateAlertRequest)(nil),   // 0: optiswift.proto.mint.CreateExchangeRateAlertRequest
	(*ExchangeRateAlert)(nil),                // 1: optiswift.proto.mint.ExchangeRateAlert
	(*GetExchangeRateAlertsRequest)(nil),     // 2: optiswift.proto.mint.GetExchangeRateAlertsRequest
	(*GetExchangeRateAlertsResponse)(nil),    // 3: optiswift.proto.mint.GetExchangeRateAlertsResponse
	(*DeleteExchangeRateAlertsRequest)(nil),  // 4: optiswift.proto.mint.DeleteExchangeRateAlertsRequest
	(*DeleteExchangeRateAlertsResponse)(nil), // 5: optiswift.proto.mint.DeleteExchangeRateAlertsResponse
}
var file_exchange_rate_alert_proto_depIdxs = []int32{
	1, // 0: optiswift.proto.mint.GetExchangeRateAlertsResponse.exchange_rate_alerts:type_name -> optiswift.proto.mint.ExchangeRateAlert
	0, // 1: optiswift.proto.mint.ExchangeRateAlertService.CreateExchangeRateAlert:input_type -> optiswift.proto.mint.CreateExchangeRateAlertRequest
	2, // 2: optiswift.proto.mint.ExchangeRateAlertService.GetExchangeRateAlerts:input_type -> optiswift.proto.mint.GetExchangeRateAlertsRequest
	4, // 3: optiswift.proto.mint.ExchangeRateAlertService.DeleteExchangeRateAlerts:input_type -> optiswift.proto.mint.DeleteExchangeRateAlertsRequest
	1, // 4: optiswift.proto.mint.ExchangeRateAlertService.CreateExchangeRateAlert:output_type -> optiswift.proto.mint.ExchangeRateAlert
	3, // 5: optiswift.proto.mint.ExchangeRateAlertService.GetExchangeRateAlerts:output_type -> optiswift.proto.mint.GetExchangeRateAlertsResponse
	5, // 6: optiswift.proto.mint.ExchangeRateAlertService.DeleteExchangeRateAlerts:output_type -> optiswift.proto.mint.DeleteExchangeRateAlertsResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_exchange_rate_alert_proto_init() }
func file_exchange_rate_alert_proto_init() {
	if File_exchange_rate_alert_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_exchange_rate_alert_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateExchangeRateAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exchange_rate_alert_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ExchangeRateAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exchange_rate_alert_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetExchangeRateAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exchange_rate_alert_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetExchangeRateAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exchange_rate_alert_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteExchangeRateAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exchange_rate_alert_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteExchangeRateAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exchange_rate_alert_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exchange_rate_alert_proto_goTypes,
		DependencyIndexes: file_exchange_rate_alert_proto_depIdxs,
		MessageInfos:      file_exchange_rate_alert_proto_msgTypes,
	}.Build()
	File_exchange_rate_alert_proto = out.File
	file_exchange_rate_alert_proto_rawDesc = nil
	file_exchange_rate_alert_proto_goTypes = nil
	file_exchange_rate_alert_proto_depIdxs = nil
}
