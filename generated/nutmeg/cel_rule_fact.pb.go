// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: cel_rule_fact.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CelRuleFact struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventData:
	//
	//	*CelRuleFact_User
	//	*CelRuleFact_Payout
	//	*CelRuleFact_Topup
	//	*CelRuleFact_InternalTransfer
	EventData     isCelRuleFact_EventData `protobuf_oneof:"event_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CelRuleFact) Reset() {
	*x = CelRuleFact{}
	mi := &file_cel_rule_fact_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CelRuleFact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CelRuleFact) ProtoMessage() {}

func (x *CelRuleFact) ProtoReflect() protoreflect.Message {
	mi := &file_cel_rule_fact_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CelRuleFact.ProtoReflect.Descriptor instead.
func (*CelRuleFact) Descriptor() ([]byte, []int) {
	return file_cel_rule_fact_proto_rawDescGZIP(), []int{0}
}

func (x *CelRuleFact) GetEventData() isCelRuleFact_EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *CelRuleFact) GetUser() *User {
	if x != nil {
		if x, ok := x.EventData.(*CelRuleFact_User); ok {
			return x.User
		}
	}
	return nil
}

func (x *CelRuleFact) GetPayout() *PayoutTransaction {
	if x != nil {
		if x, ok := x.EventData.(*CelRuleFact_Payout); ok {
			return x.Payout
		}
	}
	return nil
}

func (x *CelRuleFact) GetTopup() *TopupTransaction {
	if x != nil {
		if x, ok := x.EventData.(*CelRuleFact_Topup); ok {
			return x.Topup
		}
	}
	return nil
}

func (x *CelRuleFact) GetInternalTransfer() *InternalTransferTransaction {
	if x != nil {
		if x, ok := x.EventData.(*CelRuleFact_InternalTransfer); ok {
			return x.InternalTransfer
		}
	}
	return nil
}

type isCelRuleFact_EventData interface {
	isCelRuleFact_EventData()
}

type CelRuleFact_User struct {
	User *User `protobuf:"bytes,1,opt,name=user,proto3,oneof"`
}

type CelRuleFact_Payout struct {
	Payout *PayoutTransaction `protobuf:"bytes,2,opt,name=payout,proto3,oneof"`
}

type CelRuleFact_Topup struct {
	Topup *TopupTransaction `protobuf:"bytes,3,opt,name=topup,proto3,oneof"`
}

type CelRuleFact_InternalTransfer struct {
	InternalTransfer *InternalTransferTransaction `protobuf:"bytes,4,opt,name=internal_transfer,json=internalTransfer,proto3,oneof"`
}

func (*CelRuleFact_User) isCelRuleFact_EventData() {}

func (*CelRuleFact_Payout) isCelRuleFact_EventData() {}

func (*CelRuleFact_Topup) isCelRuleFact_EventData() {}

func (*CelRuleFact_InternalTransfer) isCelRuleFact_EventData() {}

var File_cel_rule_fact_proto protoreflect.FileDescriptor

const file_cel_rule_fact_proto_rawDesc = "" +
	"\n" +
	"\x13cel_rule_fact.proto\x12\x16optiswift.proto.nutmeg\x1a\fevents.proto\"\xba\x02\n" +
	"\vCelRuleFact\x122\n" +
	"\x04user\x18\x01 \x01(\v2\x1c.optiswift.proto.nutmeg.UserH\x00R\x04user\x12C\n" +
	"\x06payout\x18\x02 \x01(\v2).optiswift.proto.nutmeg.PayoutTransactionH\x00R\x06payout\x12@\n" +
	"\x05topup\x18\x03 \x01(\v2(.optiswift.proto.nutmeg.TopupTransactionH\x00R\x05topup\x12b\n" +
	"\x11internal_transfer\x18\x04 \x01(\v23.optiswift.proto.nutmeg.InternalTransferTransactionH\x00R\x10internalTransferB\f\n" +
	"\n" +
	"event_dataB\n" +
	"Z\b./;protob\x06proto3"

var (
	file_cel_rule_fact_proto_rawDescOnce sync.Once
	file_cel_rule_fact_proto_rawDescData []byte
)

func file_cel_rule_fact_proto_rawDescGZIP() []byte {
	file_cel_rule_fact_proto_rawDescOnce.Do(func() {
		file_cel_rule_fact_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cel_rule_fact_proto_rawDesc), len(file_cel_rule_fact_proto_rawDesc)))
	})
	return file_cel_rule_fact_proto_rawDescData
}

var file_cel_rule_fact_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_cel_rule_fact_proto_goTypes = []any{
	(*CelRuleFact)(nil),                 // 0: optiswift.proto.nutmeg.CelRuleFact
	(*User)(nil),                        // 1: optiswift.proto.nutmeg.User
	(*PayoutTransaction)(nil),           // 2: optiswift.proto.nutmeg.PayoutTransaction
	(*TopupTransaction)(nil),            // 3: optiswift.proto.nutmeg.TopupTransaction
	(*InternalTransferTransaction)(nil), // 4: optiswift.proto.nutmeg.InternalTransferTransaction
}
var file_cel_rule_fact_proto_depIdxs = []int32{
	1, // 0: optiswift.proto.nutmeg.CelRuleFact.user:type_name -> optiswift.proto.nutmeg.User
	2, // 1: optiswift.proto.nutmeg.CelRuleFact.payout:type_name -> optiswift.proto.nutmeg.PayoutTransaction
	3, // 2: optiswift.proto.nutmeg.CelRuleFact.topup:type_name -> optiswift.proto.nutmeg.TopupTransaction
	4, // 3: optiswift.proto.nutmeg.CelRuleFact.internal_transfer:type_name -> optiswift.proto.nutmeg.InternalTransferTransaction
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cel_rule_fact_proto_init() }
func file_cel_rule_fact_proto_init() {
	if File_cel_rule_fact_proto != nil {
		return
	}
	file_events_proto_init()
	file_cel_rule_fact_proto_msgTypes[0].OneofWrappers = []any{
		(*CelRuleFact_User)(nil),
		(*CelRuleFact_Payout)(nil),
		(*CelRuleFact_Topup)(nil),
		(*CelRuleFact_InternalTransfer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cel_rule_fact_proto_rawDesc), len(file_cel_rule_fact_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cel_rule_fact_proto_goTypes,
		DependencyIndexes: file_cel_rule_fact_proto_depIdxs,
		MessageInfos:      file_cel_rule_fact_proto_msgTypes,
	}.Build()
	File_cel_rule_fact_proto = out.File
	file_cel_rule_fact_proto_goTypes = nil
	file_cel_rule_fact_proto_depIdxs = nil
}
