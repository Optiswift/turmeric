// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: events.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferStatus int32

const (
	TransferStatus_QUEUED     TransferStatus = 0
	TransferStatus_PROCESSING TransferStatus = 1
	TransferStatus_SUCCESS    TransferStatus = 2
	TransferStatus_FAILED     TransferStatus = 3
)

// Enum value maps for TransferStatus.
var (
	TransferStatus_name = map[int32]string{
		0: "QUEUED",
		1: "PROCESSING",
		2: "SUCCESS",
		3: "FAILED",
	}
	TransferStatus_value = map[string]int32{
		"QUEUED":     0,
		"PROCESSING": 1,
		"SUCCESS":    2,
		"FAILED":     3,
	}
)

func (x TransferStatus) Enum() *TransferStatus {
	p := new(TransferStatus)
	*p = x
	return p
}

func (x TransferStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_events_proto_enumTypes[0].Descriptor()
}

func (TransferStatus) Type() protoreflect.EnumType {
	return &file_events_proto_enumTypes[0]
}

func (x TransferStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferStatus.Descriptor instead.
func (TransferStatus) EnumDescriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{0}
}

type BenefitType int32

const (
	BenefitType_CASHBACK BenefitType = 0
	BenefitType_REFERRAL BenefitType = 1
	BenefitType_DISCOUNT BenefitType = 2
	BenefitType_POINTS   BenefitType = 3
	BenefitType_OTHER    BenefitType = 4
)

// Enum value maps for BenefitType.
var (
	BenefitType_name = map[int32]string{
		0: "CASHBACK",
		1: "REFERRAL",
		2: "DISCOUNT",
		3: "POINTS",
		4: "OTHER",
	}
	BenefitType_value = map[string]int32{
		"CASHBACK": 0,
		"REFERRAL": 1,
		"DISCOUNT": 2,
		"POINTS":   3,
		"OTHER":    4,
	}
)

func (x BenefitType) Enum() *BenefitType {
	p := new(BenefitType)
	*p = x
	return p
}

func (x BenefitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BenefitType) Descriptor() protoreflect.EnumDescriptor {
	return file_events_proto_enumTypes[1].Descriptor()
}

func (BenefitType) Type() protoreflect.EnumType {
	return &file_events_proto_enumTypes[1]
}

func (x BenefitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BenefitType.Descriptor instead.
func (BenefitType) EnumDescriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{1}
}

type ReferralStatus int32

const (
	ReferralStatus_PENDING   ReferralStatus = 0
	ReferralStatus_COMPLETED ReferralStatus = 1
)

// Enum value maps for ReferralStatus.
var (
	ReferralStatus_name = map[int32]string{
		0: "PENDING",
		1: "COMPLETED",
	}
	ReferralStatus_value = map[string]int32{
		"PENDING":   0,
		"COMPLETED": 1,
	}
)

func (x ReferralStatus) Enum() *ReferralStatus {
	p := new(ReferralStatus)
	*p = x
	return p
}

func (x ReferralStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReferralStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_events_proto_enumTypes[2].Descriptor()
}

func (ReferralStatus) Type() protoreflect.EnumType {
	return &file_events_proto_enumTypes[2]
}

func (x ReferralStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReferralStatus.Descriptor instead.
func (ReferralStatus) EnumDescriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{2}
}

type EventType int32

const (
	EventType_PAYOUT            EventType = 0
	EventType_TOPUP             EventType = 1
	EventType_USER_CREATED      EventType = 2
	EventType_INTERNAL_TRANSFER EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "PAYOUT",
		1: "TOPUP",
		2: "USER_CREATED",
		3: "INTERNAL_TRANSFER",
	}
	EventType_value = map[string]int32{
		"PAYOUT":            0,
		"TOPUP":             1,
		"USER_CREATED":      2,
		"INTERNAL_TRANSFER": 3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_events_proto_enumTypes[3].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_events_proto_enumTypes[3]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{3}
}

type BooleanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BooleanResponse) Reset() {
	*x = BooleanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanResponse) ProtoMessage() {}

func (x *BooleanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanResponse.ProtoReflect.Descriptor instead.
func (*BooleanResponse) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{0}
}

func (x *BooleanResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                      string  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	RefererId               string  `protobuf:"bytes,3,opt,name=referer_id,json=refererId,proto3" json:"referer_id,omitempty"`
	TransactionCountToDate  int32   `protobuf:"varint,4,opt,name=transaction_count_to_date,json=transactionCountToDate,proto3" json:"transaction_count_to_date,omitempty"`
	TransactionAmountToDate float64 `protobuf:"fixed64,5,opt,name=transaction_amount_to_date,json=transactionAmountToDate,proto3" json:"transaction_amount_to_date,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetRefererId() string {
	if x != nil {
		return x.RefererId
	}
	return ""
}

func (x *User) GetTransactionCountToDate() int32 {
	if x != nil {
		return x.TransactionCountToDate
	}
	return 0
}

func (x *User) GetTransactionAmountToDate() float64 {
	if x != nil {
		return x.TransactionAmountToDate
	}
	return 0
}

type PayoutBeneficiary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountName   string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	InstitutionId string `protobuf:"bytes,3,opt,name=institution_id,json=institutionId,proto3" json:"institution_id,omitempty"`
	Country       string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	PaymentMethod string `protobuf:"bytes,5,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
}

func (x *PayoutBeneficiary) Reset() {
	*x = PayoutBeneficiary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutBeneficiary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutBeneficiary) ProtoMessage() {}

func (x *PayoutBeneficiary) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutBeneficiary.ProtoReflect.Descriptor instead.
func (*PayoutBeneficiary) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{2}
}

func (x *PayoutBeneficiary) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *PayoutBeneficiary) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *PayoutBeneficiary) GetInstitutionId() string {
	if x != nil {
		return x.InstitutionId
	}
	return ""
}

func (x *PayoutBeneficiary) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PayoutBeneficiary) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

type LoyaltyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Benefits []*Benefit `protobuf:"bytes,1,rep,name=benefits,proto3" json:"benefits,omitempty"`
}

func (x *LoyaltyResponse) Reset() {
	*x = LoyaltyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoyaltyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoyaltyResponse) ProtoMessage() {}

func (x *LoyaltyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoyaltyResponse.ProtoReflect.Descriptor instead.
func (*LoyaltyResponse) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{3}
}

func (x *LoyaltyResponse) GetBenefits() []*Benefit {
	if x != nil {
		return x.Benefits
	}
	return nil
}

type Benefit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        BenefitType `protobuf:"varint,1,opt,name=type,proto3,enum=optiswift.proto.nutmeg.BenefitType" json:"type,omitempty"`
	Amount      float64     `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Benefit) Reset() {
	*x = Benefit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Benefit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Benefit) ProtoMessage() {}

func (x *Benefit) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Benefit.ProtoReflect.Descriptor instead.
func (*Benefit) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{4}
}

func (x *Benefit) GetType() BenefitType {
	if x != nil {
		return x.Type
	}
	return BenefitType_CASHBACK
}

func (x *Benefit) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Benefit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TopupInitiator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountName   string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	InstitutionId string `protobuf:"bytes,3,opt,name=institution_id,json=institutionId,proto3" json:"institution_id,omitempty"`
	Country       string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *TopupInitiator) Reset() {
	*x = TopupInitiator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopupInitiator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopupInitiator) ProtoMessage() {}

func (x *TopupInitiator) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopupInitiator.ProtoReflect.Descriptor instead.
func (*TopupInitiator) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{5}
}

func (x *TopupInitiator) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TopupInitiator) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *TopupInitiator) GetInstitutionId() string {
	if x != nil {
		return x.InstitutionId
	}
	return ""
}

func (x *TopupInitiator) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type PayoutTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount         float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency       string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Narration      string                 `protobuf:"bytes,4,opt,name=narration,proto3" json:"narration,omitempty"`
	Beneficiary    *PayoutBeneficiary     `protobuf:"bytes,5,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	Rate           float64                `protobuf:"fixed64,6,opt,name=rate,proto3" json:"rate,omitempty"`
	Fee            float64                `protobuf:"fixed64,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Sender         *User                  `protobuf:"bytes,8,opt,name=sender,proto3" json:"sender,omitempty"`
	Provider       string                 `protobuf:"bytes,9,opt,name=provider,proto3" json:"provider,omitempty"`
	Status         TransferStatus         `protobuf:"varint,10,opt,name=status,proto3,enum=optiswift.proto.nutmeg.TransferStatus" json:"status,omitempty"`
	ReferralStatus ReferralStatus         `protobuf:"varint,11,opt,name=referral_status,json=referralStatus,proto3,enum=optiswift.proto.nutmeg.ReferralStatus" json:"referral_status,omitempty"`
	SignedupAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=signedup_at,json=signedupAt,proto3" json:"signedup_at,omitempty"`
}

func (x *PayoutTransaction) Reset() {
	*x = PayoutTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutTransaction) ProtoMessage() {}

func (x *PayoutTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutTransaction.ProtoReflect.Descriptor instead.
func (*PayoutTransaction) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{6}
}

func (x *PayoutTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PayoutTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PayoutTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayoutTransaction) GetNarration() string {
	if x != nil {
		return x.Narration
	}
	return ""
}

func (x *PayoutTransaction) GetBeneficiary() *PayoutBeneficiary {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

func (x *PayoutTransaction) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PayoutTransaction) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *PayoutTransaction) GetSender() *User {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *PayoutTransaction) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *PayoutTransaction) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_QUEUED
}

func (x *PayoutTransaction) GetReferralStatus() ReferralStatus {
	if x != nil {
		return x.ReferralStatus
	}
	return ReferralStatus_PENDING
}

func (x *PayoutTransaction) GetSignedupAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SignedupAt
	}
	return nil
}

type TopupTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount      float64         `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency    string          `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Narration   string          `protobuf:"bytes,4,opt,name=narration,proto3" json:"narration,omitempty"`
	Initiator   *TopupInitiator `protobuf:"bytes,5,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Rate        float64         `protobuf:"fixed64,6,opt,name=rate,proto3" json:"rate,omitempty"`
	Fee         float64         `protobuf:"fixed64,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Beneficiary *User           `protobuf:"bytes,8,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	Provider    string          `protobuf:"bytes,9,opt,name=provider,proto3" json:"provider,omitempty"`
	Status      TransferStatus  `protobuf:"varint,10,opt,name=status,proto3,enum=optiswift.proto.nutmeg.TransferStatus" json:"status,omitempty"`
}

func (x *TopupTransaction) Reset() {
	*x = TopupTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopupTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopupTransaction) ProtoMessage() {}

func (x *TopupTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopupTransaction.ProtoReflect.Descriptor instead.
func (*TopupTransaction) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{7}
}

func (x *TopupTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TopupTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TopupTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TopupTransaction) GetNarration() string {
	if x != nil {
		return x.Narration
	}
	return ""
}

func (x *TopupTransaction) GetInitiator() *TopupInitiator {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *TopupTransaction) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *TopupTransaction) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TopupTransaction) GetBeneficiary() *User {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

func (x *TopupTransaction) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *TopupTransaction) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_QUEUED
}

type InternalTransferTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount        float64        `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	BaseCurrency  string         `protobuf:"bytes,3,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	QuoteCurrency string         `protobuf:"bytes,4,opt,name=quote_currency,json=quoteCurrency,proto3" json:"quote_currency,omitempty"`
	Narration     string         `protobuf:"bytes,5,opt,name=narration,proto3" json:"narration,omitempty"`
	Rate          float64        `protobuf:"fixed64,6,opt,name=rate,proto3" json:"rate,omitempty"`
	Fee           float64        `protobuf:"fixed64,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Sender        *User          `protobuf:"bytes,8,opt,name=sender,proto3" json:"sender,omitempty"`
	Beneficiary   *User          `protobuf:"bytes,9,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	Status        TransferStatus `protobuf:"varint,10,opt,name=status,proto3,enum=optiswift.proto.nutmeg.TransferStatus" json:"status,omitempty"`
}

func (x *InternalTransferTransaction) Reset() {
	*x = InternalTransferTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalTransferTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalTransferTransaction) ProtoMessage() {}

func (x *InternalTransferTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalTransferTransaction.ProtoReflect.Descriptor instead.
func (*InternalTransferTransaction) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{8}
}

func (x *InternalTransferTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InternalTransferTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *InternalTransferTransaction) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *InternalTransferTransaction) GetQuoteCurrency() string {
	if x != nil {
		return x.QuoteCurrency
	}
	return ""
}

func (x *InternalTransferTransaction) GetNarration() string {
	if x != nil {
		return x.Narration
	}
	return ""
}

func (x *InternalTransferTransaction) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *InternalTransferTransaction) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *InternalTransferTransaction) GetSender() *User {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *InternalTransferTransaction) GetBeneficiary() *User {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

func (x *InternalTransferTransaction) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_QUEUED
}

var File_events_proto protoreflect.FileDescriptor

var file_events_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6c, 0x65,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x4e, 0x0a, 0x0f, 0x4c, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x08,
	0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x22, 0x7c, 0x0a, 0x07, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x88, 0x04, 0x0a,
	0x11, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x72, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d,
	0x65, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77,
	0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d,
	0x65, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x75, 0x70, 0x41, 0x74, 0x22, 0xfc, 0x02, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x75,
	0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44,
	0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69,
	0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8b, 0x03, 0x0a, 0x1b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x72, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x34,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d,
	0x65, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2a, 0x45, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x4e, 0x0a, 0x0b, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41,
	0x53, 0x48, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x46, 0x45,
	0x52, 0x52, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x53, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x04, 0x2a, 0x2c, 0x0a, 0x0e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x4b, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x59, 0x4f, 0x55, 0x54,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x50, 0x55, 0x50, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x46, 0x45, 0x52, 0x10, 0x03, 0x32, 0x8a, 0x03, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x54, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x27,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x12, 0x29, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x27, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e,
	0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x28,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73,
	0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65,
	0x67, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x70, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74, 0x6d, 0x65, 0x67, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x75, 0x74,
	0x6d, 0x65, 0x67, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_events_proto_rawDescOnce sync.Once
	file_events_proto_rawDescData = file_events_proto_rawDesc
)

func file_events_proto_rawDescGZIP() []byte {
	file_events_proto_rawDescOnce.Do(func() {
		file_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_events_proto_rawDescData)
	})
	return file_events_proto_rawDescData
}

var file_events_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_events_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_events_proto_goTypes = []any{
	(TransferStatus)(0),                 // 0: optiswift.proto.nutmeg.TransferStatus
	(BenefitType)(0),                    // 1: optiswift.proto.nutmeg.BenefitType
	(ReferralStatus)(0),                 // 2: optiswift.proto.nutmeg.ReferralStatus
	(EventType)(0),                      // 3: optiswift.proto.nutmeg.EventType
	(*BooleanResponse)(nil),             // 4: optiswift.proto.nutmeg.BooleanResponse
	(*User)(nil),                        // 5: optiswift.proto.nutmeg.User
	(*PayoutBeneficiary)(nil),           // 6: optiswift.proto.nutmeg.PayoutBeneficiary
	(*LoyaltyResponse)(nil),             // 7: optiswift.proto.nutmeg.LoyaltyResponse
	(*Benefit)(nil),                     // 8: optiswift.proto.nutmeg.Benefit
	(*TopupInitiator)(nil),              // 9: optiswift.proto.nutmeg.TopupInitiator
	(*PayoutTransaction)(nil),           // 10: optiswift.proto.nutmeg.PayoutTransaction
	(*TopupTransaction)(nil),            // 11: optiswift.proto.nutmeg.TopupTransaction
	(*InternalTransferTransaction)(nil), // 12: optiswift.proto.nutmeg.InternalTransferTransaction
	(*timestamppb.Timestamp)(nil),       // 13: google.protobuf.Timestamp
}
var file_events_proto_depIdxs = []int32{
	8,  // 0: optiswift.proto.nutmeg.LoyaltyResponse.benefits:type_name -> optiswift.proto.nutmeg.Benefit
	1,  // 1: optiswift.proto.nutmeg.Benefit.type:type_name -> optiswift.proto.nutmeg.BenefitType
	6,  // 2: optiswift.proto.nutmeg.PayoutTransaction.beneficiary:type_name -> optiswift.proto.nutmeg.PayoutBeneficiary
	5,  // 3: optiswift.proto.nutmeg.PayoutTransaction.sender:type_name -> optiswift.proto.nutmeg.User
	0,  // 4: optiswift.proto.nutmeg.PayoutTransaction.status:type_name -> optiswift.proto.nutmeg.TransferStatus
	2,  // 5: optiswift.proto.nutmeg.PayoutTransaction.referral_status:type_name -> optiswift.proto.nutmeg.ReferralStatus
	13, // 6: optiswift.proto.nutmeg.PayoutTransaction.signedup_at:type_name -> google.protobuf.Timestamp
	9,  // 7: optiswift.proto.nutmeg.TopupTransaction.initiator:type_name -> optiswift.proto.nutmeg.TopupInitiator
	5,  // 8: optiswift.proto.nutmeg.TopupTransaction.beneficiary:type_name -> optiswift.proto.nutmeg.User
	0,  // 9: optiswift.proto.nutmeg.TopupTransaction.status:type_name -> optiswift.proto.nutmeg.TransferStatus
	5,  // 10: optiswift.proto.nutmeg.InternalTransferTransaction.sender:type_name -> optiswift.proto.nutmeg.User
	5,  // 11: optiswift.proto.nutmeg.InternalTransferTransaction.beneficiary:type_name -> optiswift.proto.nutmeg.User
	0,  // 12: optiswift.proto.nutmeg.InternalTransferTransaction.status:type_name -> optiswift.proto.nutmeg.TransferStatus
	5,  // 13: optiswift.proto.nutmeg.Events.UserCreated:input_type -> optiswift.proto.nutmeg.User
	10, // 14: optiswift.proto.nutmeg.Events.Payout:input_type -> optiswift.proto.nutmeg.PayoutTransaction
	11, // 15: optiswift.proto.nutmeg.Events.Topup:input_type -> optiswift.proto.nutmeg.TopupTransaction
	12, // 16: optiswift.proto.nutmeg.Events.InternalTransfer:input_type -> optiswift.proto.nutmeg.InternalTransferTransaction
	7,  // 17: optiswift.proto.nutmeg.Events.UserCreated:output_type -> optiswift.proto.nutmeg.LoyaltyResponse
	7,  // 18: optiswift.proto.nutmeg.Events.Payout:output_type -> optiswift.proto.nutmeg.LoyaltyResponse
	7,  // 19: optiswift.proto.nutmeg.Events.Topup:output_type -> optiswift.proto.nutmeg.LoyaltyResponse
	7,  // 20: optiswift.proto.nutmeg.Events.InternalTransfer:output_type -> optiswift.proto.nutmeg.LoyaltyResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_events_proto_init() }
func file_events_proto_init() {
	if File_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_events_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BooleanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PayoutBeneficiary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*LoyaltyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Benefit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TopupInitiator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PayoutTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TopupTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*InternalTransferTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_events_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_events_proto_goTypes,
		DependencyIndexes: file_events_proto_depIdxs,
		EnumInfos:         file_events_proto_enumTypes,
		MessageInfos:      file_events_proto_msgTypes,
	}.Build()
	File_events_proto = out.File
	file_events_proto_rawDesc = nil
	file_events_proto_goTypes = nil
	file_events_proto_depIdxs = nil
}
